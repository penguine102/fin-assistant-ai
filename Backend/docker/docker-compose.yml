services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: always
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - ENV=${ENV:-development}
      - API_PREFIX=${API_PREFIX:-/api/v1}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - APP_PORT=${APP_PORT}
      # - DATABASE_URL=${DATABASE_URL}
      # Redis split envs for app
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      # - REDIS_URL=${REDIS_URL}
    networks:
      - app-network
    volumes:
      - ../:/usr/src/app
    dns:
      - 8.8.8.8
      - 1.1.1.1
    command: ["sh", "docker/start.sh"]
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s
    networks:
      - app-network  
  redis:
    image: redis:7.4.1-alpine
    container_name: redis-service
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command:
      - redis-server
      - --appendonly
      - "no"
      - --requirepass
      - "${REDIS_PASSWORD:-}"
      - --maxmemory
      - "${REDIS_MAXMEMORY:-}"
      - --timeout
      - "${REDIS_TIMEOUT:-0}"
      - --hz
      - "${REDIS_HZ:-10}"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD:-} ping | grep PONG"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - app-network  

volumes:
  postgres_data: {}
  redis_data: {}

networks:
  app-network: {}